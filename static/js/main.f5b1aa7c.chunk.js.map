{"version":3,"sources":["Components/Helper/Helper.js","Components/Presentational/Planet-Header.js","Components/Presentational/Cards.js","Components/Presentational/Info.js","Components/Presentational/Planet-Body.js","Components/Input.js","pages/Planets.js","Components/Presentational/Login-Header.js","pages/Login.js","App.js","Components/Helper/Auth.js","index.js"],"names":["handleNavigationHelper","target","page","val","getAttribute","URL","searchParams","get","updateCounter","startDate","getCounter","JSON","parse","localStorage","getItem","timeNow","Date","username","Object","keys","length","toLowerCase","setItem","stringify","getTime","time","count","PlanetHeader","className","style","padding","fontSize","toUpperCase","to","pathname","state","logout","type","Cards","results","handleShowModal","key","name","population","diameter","gravity","climate","rotation_period","onClick","Math","floor","random","width","height","Info","modalData","show","handleClose","Modal","onHide","Header","closeButton","Title","Body","orbital_period","terrain","surface_water","PlanetBody","restricted","planets","loading","map","color","margin","display","TextInput","setUsername","FormGroup","controlId","FormControl","autoFocus","value","onChange","e","PasswordInput","password","setPassword","SearchInput","handleSearch","event","placeholder","Planets","useState","setPlanets","setPage","setCount","next","setNext","query","setQuery","setLoading","setRestricted","SetModalData","setShow","getResults","queries","pages","a","axios","res","response","data","maxPage","console","log","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","React","useEffect","data-pointer","data-nav","planetData","entries","LoginHeader","Login","props","isAuth","setIsAuth","loginError","setLoginError","location","useLocation","preventDefault","birth_year","removeItem","onSubmit","Button","block","disabled","marginTop","App","redirctTo","setRedirctTo","isLoggedIn","history","createBrowserHistory","exact","path","TagManager","initialize","gtmId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5b1aa7c.chunk.js","sourcesContent":["const extractPages = (page) =>{\n    if(page && page !== null){\n        var url = new URL(page);\n        return url.searchParams.get('page');\n    }else {\n        return null;\n    }\n}\n\nexport const generateRandom = () => {\n  return Math.floor(Math.random() * 3);\n }\n \nexport const handleNavigationHelper = target => {\n    var val = extractPages(target.getAttribute(\"data-nav\"));\n    if(val && val !== null){\n        return val;\n    }\n  }\n\nexport function debounce(func, wait, immediate) {\n    var timeout;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  };\n\n  export function updateCounter(){\n    let getCounter = JSON.parse(localStorage.getItem('counter')) || {};\n    let timeNow = new Date();\n    let username= getCounter.username;\n    if(Object.keys(getCounter).length === 0 || getCounter.username.toLowerCase() === 'luke skywalker' ){\n      localStorage.setItem('counter',JSON.stringify({\"count\":1,\"time\": timeNow.getTime(),'username':username}));\n      return true;\n    }\n    else {\n      let timeDiff = getMinutesBetweenDates(getCounter.time,timeNow);\n      if(timeDiff > 1){\n        localStorage.setItem('counter',JSON.stringify({\"count\":1,\"time\": timeNow.getTime(),'username':username}));\n      }\n      else {\n        if(getCounter.count < 17){\n          localStorage.setItem('counter',JSON.stringify({\"count\":getCounter.count+1,\"time\": timeNow.getTime(),'username':username}));\n          return true;\n        }\n        else{\n          return false;\n        }\n      }\n    }\n    \n  }\n\n  function getMinutesBetweenDates(startDate, endDate) {\n      var diff = endDate - startDate;\n      return (diff / 60000);\n  }","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function PlanetHeader({username}){\n    return (\n        <header className=\"col-md-12 col-xs-12\">\n            <h1 className=\"col-md-5 title pull-left\">Galactic Empire: Planets</h1>\n            <div className=\"text-white col-md-4 pull-left\" style={{padding: \"15px\",fontSize:\"20px\"}}>Welcome {username.toUpperCase()}</div>\n            <div className=\"col-md-3 pull-left mobile-signout\">\n                <Link to={{\n                    pathname: '/login',\n                    state: {\n                        logout: true\n                    }\n                }}><button type=\"button\" className=\"btn btn-danger transparent pull-right\">Sign Out</button>\n            </Link>\n            </div>\n        </header>\n    )\n}","import React from 'react';\nimport {  generateRandom } from '../Helper/Helper';\n\nfunction Cards({results,handleShowModal}){\n    return (\n        <div key={results.name} className=\"plant-cards card\">\n            <div className=\"card-body\">\n            <div className=\"card-box-body\">\n                <p className=\"population\"><span>Population:</span> <span style={{fontSize: `${results.population.length+10}px`}}  className=\"text-green bold\">{results.population}</span></p>\n                <div className=\"width-100 diamter-water common-card \">\n                    <p className=\"width-100 \"><span>Diameter: </span> <span className=\"text-white bold\">{results.diameter}</span></p>\n                    <p className=\"width-100 \"><span>Gravity: </span><span className=\"text-white bold\">{results.gravity}</span></p>\n                </div>\n                <div className=\"width-100 climate-rotation common-card\">\n                    <p className=\"width-100\"><span>Climate: </span> <span className=\"text-white bold\">{results.climate}</span></p>\n                    <p className=\"width-100\"><span>Rotation period: </span><span className=\"text-white bold\">{results.rotation_period}</span></p>\n                </div>\n                \n            </div>\n            <div className=\"card-box-name\">\n                <p className=\"pull-left\">{results.name}</p>\n                <button type=\"button\" className=\"btn btn-info pull-right transparent\"  onClick={()=> handleShowModal(results)}>View More</button>\n            </div>\n            </div>\n            <div className={`planet-img gradient${generateRandom()}`} style={{width: `${results.population.length*18}px`,height: `${results.population.length*18}px`}}></div>\n            <div className=\"opacity-body\">\n            </div>\n        </div>\n    )     \n}\nexport default Cards;","import React from 'react';\nimport { Modal } from 'react-bootstrap';\n\nexport default function Info({modalData,show,handleClose}){\nreturn(\n    <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Planet: {modalData.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <p>Name: {modalData.name}</p>\n            <p>Rotation_period: {modalData.rotation_period}</p>\n            <p>Orbital_period: {modalData.orbital_period}</p>\n            <p>Diameter: {modalData.diameter}</p>\n            <p>Climate: {modalData.climate}</p>\n            <p>Gravity: {modalData.gravity}</p>\n            <p>Terrain: {modalData.terrain}</p>\n            <p>Surface_water:{modalData.surface_water}</p>\n            <p>Population: {modalData.population}</p>\n        </Modal.Body>\n    </Modal>\n)\n}","import React from 'react';\nimport Cards from './Cards';\nimport Info from './Info';\n\nexport default function PlanetBody({restricted,planets,handleClose,modalData,show,loading,handleShowModal }){\n    return (\n        <div className=\"planet-list col-md-12 col-xs-12 style-2 scrollbar\">\n          <div className=\"col-md-12 text-white\">The image size inside the tiles denotes the comparative size of planet's population</div>\n          {restricted !== \"\" ? (<div className=\"alert alert-danger\">{restricted}</div>) : \"\"}\n            {planets.map((results,key) => (\n                <Cards key={results.name +key}  results={results} handleShowModal={handleShowModal}/>\n            ))}\n            <Info handleClose={handleClose} modalData={modalData} show={show}/>\n            {planets.length === 0 && loading === \"none\" ? (<p style={{color: \"#fff\",margin: \"15px\"}}>No record found</p>) : (\"\")}\n            <div className=\"spinner\" style={{display: `${loading}`}}></div>\n        </div>\n    )\n}","import React from 'react';\nimport { FormGroup, FormControl } from \"react-bootstrap\";\n\nexport function TextInput({username,setUsername}) {\n    return   (\n        <FormGroup controlId=\"username\" >\n            <label className=\"text-white\">Username (case-insensitive)</label>\n            <FormControl\n                autoFocus\n                type=\"text\"\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n            />\n        </FormGroup>\n    ) \n}\n\nexport function PasswordInput({password,setPassword}) {\n return (\n    <FormGroup controlId=\"password\" >\n        <label  className=\"text-white\">Password</label>\n        <FormControl\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n        />\n    </FormGroup>\n )\n}\n\nexport function SearchInput({handleSearch}){\n    return(\n        <input type=\"search\" className=\"searchBar col-md-3 pull-left\" onChange={event=> handleSearch(event.target)} placeholder=\"Search Planets\"/>\n    )\n}","import React , {useState } from 'react';\nimport { handleNavigationHelper, debounce ,updateCounter} from '../Components/Helper/Helper'\nimport PlanetHeader from '../Components/Presentational/Planet-Header';\nimport PlanetBody from '../Components/Presentational/Planet-Body';\nimport {SearchInput} from '../Components/Input'\nimport axios from 'axios';\nimport \"../Components/Helper/Style/Planets.css\";\n\nexport default function Planets(){\n  const [planets,setPlanets] = useState([]);\n  const [page,setPage] = useState(1)\n  const [count,setCount] = useState(null);\n  const [next,setNext] = useState(null);\n  const [query,setQuery] = useState(\"\");\n  const [loading,setLoading] = useState(\"none\");\n  const [restricted,setRestricted] = useState(\"\");\n  const [username,setUsername]= useState(\"\");\n  const [modalData,SetModalData] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  /****************************Mounting,Unmounting and Updating code starts*****************/\n  const getResults = async(queries,pages) =>{\n    if(!updateCounter()){\n      setPlanets([]);\n      setRestricted(\"Maximum Api request limit reached. Please try after a minute.\")\n      return false;\n    }\n    else{\n      setRestricted(\"\")\n    }\n    setLoading(\"block\");\n    try{\n      const res =  await axios.get(`https://swapi.dev/api/planets/?page=${pages}&format=json&search=${queries}`);\n      let response= res.data; \n      let maxPage = response.count/10;\n        if(planets.length !== 0){\n          let res = [...planets,...response.results];\n          setPlanets(res);\n        }else {\n          setPlanets(response.results);\n        }\n        setCount(response.count);\n        maxPage > page ?  setNext(response.next) : setNext(\"done\");\n\n    } catch (err){\n        console.log('Error',err);\n    }\n    setLoading(\"none\");\n  }\n\n  const handleSearch = debounce(function(target) {\n    setPlanets([]);\n    setQuery(target.value);\n    setPage(1);\n  }, 600);\n  \n\n  React.useEffect(()=>{\n    getResults(query,page);\n    setUsername(JSON.parse(localStorage.getItem('counter')).username);\n  },[query,page]);\n\n  /****************************Mounting,Unmounting and Updating ends*****************/\n\n  /*****************Onclick modal box code starts *****************************/\n  const handleShowModal = (results)=>{\n    handleShow();\n    const planetData = [];\n    for (let [key, value] of Object.entries(results)) {\n        planetData[key] = value;\n    }\n    SetModalData(planetData);\n  }\n\n  /************************Onclick modal box code ends ************************/\n  return (\n    <div className=\"planetContainer col-md-12 npr\">\n      <PlanetHeader username={username}/>\n      <SearchInput handleSearch={handleSearch}/>\n      <button type=\"button\" className=\"loadmore-btn btn btn-success transparent pull-left\" data-pointer={loading} onClick={event => setPage(handleNavigationHelper(event.target))} data-nav={next}>{loading === \"block\" ? \"loading...\" : \"Load More\"}</button>\n      <p  className=\"count col-md-2 pull-left text-white\">Showing: {planets.length} of {count ? count : 0}</p>\n      <PlanetBody handleShowModal={handleShowModal} restricted={restricted} planets={planets} handleClose={handleClose} modalData={modalData} show={show} loading={loading}/>\n    </div>\n  )\n}","import React from 'react';\n\nexport default function LoginHeader(){\n    return (\n        <>\n            <h1 className=\"col-md-5 title\">Galactic Empire</h1>\n            <h2 className=\"col-md-12 login-title text-white\">Login</h2>\n        </>\n    )\n}","import React, { useState } from 'react';\nimport { Redirect,useLocation } from \"react-router-dom\";\nimport LoginHeader from '../Components/Presentational/Login-Header';\nimport {TextInput, PasswordInput} from '../Components/Input'\nimport { Button} from \"react-bootstrap\";\nimport axios from 'axios';\nimport \"../Components/Helper/Style/Login.css\";\n\nexport default function Login(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isAuth,setIsAuth] = useState(false);\n  const [loginError,setLoginError] = useState(false);\n  const [loading,setLoading] = useState(false);\n  const location = useLocation();\n\n  if (isAuth) {\n    return <Redirect to=\"/planets\"/>\n  }\n  \n  if (location.state && location.state.logout === true) {\n    localStorage.removeItem(\"user\");\n  }\n\n function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n  \n  async function handleSubmit(event) {\n    event.preventDefault();\n    setLoading(true);\n    try{\n        const res =  await axios.get(`https://swapi.dev/api/people/?search=${username}&format=json`);\n       \n        let response= res.data;\n        if(username.toLowerCase() === response.results[0].name.toLowerCase() && password === response.results[0].birth_year){\n          let timeNow = new Date();\n          localStorage.setItem('user',JSON.stringify({\"isLoggedIn\":true,\"username\":username}));\n          localStorage.setItem('counter',JSON.stringify({\"count\":1,\"time\": timeNow.getTime(),'username':username}));\n          setIsAuth(true);\n        }\n        else {\n          setLoginError(true);\n        }\n    } catch (err){\n      setLoginError(true);\n    }\n    setLoading(false);\n  }\n\n  return (\n    <div className=\"Login\">\n      <LoginHeader/>\n      <form onSubmit={handleSubmit}>\n            <TextInput username={username} setUsername={setUsername}/>\n            <PasswordInput setPassword={setPassword} password={password}/>\n            <Button block className=\"btn-success\"  disabled={!validateForm()} type=\"submit\">{loading ? \"Loading...\" : \"Login\"}</Button>\n            {loginError ? (<div style={{marginTop:\"20px\"}} className=\"alert alert-danger alert-dismissible fade show\">Invalid Credentials</div>) : (\"\")}\n      </form>\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect  } from \"react-router-dom\";\nimport Planets from './pages/Planets';\nimport Login from './pages/Login';\nimport Auth from './Components/Helper/Auth'\nimport { createBrowserHistory } from 'history'\n\nexport default function App(){\n  const [redirctTo, setRedirctTo] = useState(false);\n  useEffect(()=>{\n    if (Auth()) {\n      setRedirctTo(true);\n    }\n  },[]);\n  return(\n    <div className=\"App\">\n        <Router  history={createBrowserHistory}>\n        {\n          redirctTo ? <Redirect to=\"/planets\"/> :  <Redirect to=\"/login\"/>\n        }\n        <Switch>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/planets\">\n              <Planets />\n            </Route>\n          </Switch>\n        </Router>\n    </div>\n  )\n}","export default function Auth(){\n    const user = JSON.parse(localStorage.getItem('user')) || {};\n    return user.isLoggedIn ? true : false;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TagManager from 'react-gtm-module'\nimport App from './App';\n\nconst tagManagerArgs = {\n  gtmId: 'GTM-KR777QD'\n}\n\nTagManager.initialize(tagManagerArgs)\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}